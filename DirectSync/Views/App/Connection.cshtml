@model DirectSync.Models.ConnectionViewModel

@{
    ViewData["Title"] = "Connection";

    var userKeyList = Model.User.UserKeys.ToList();
}

<h2>Exchange API Connection</h2>
<hr />

@if (!Html.ViewData.ModelState.IsValid)
{
    <div asp-validation-summary="All" class="alert alert-danger"></div>
}

<div class="accordion" id="accordionExample">
    @foreach (var exchange in Model.Exchanges)
    {
        <div class="card bg-white">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#@exchange.ExchangeName" aria-expanded="false" aria-controls="collapseTwo">
                        @exchange.ExchangeName API
                    </button>

                </h5>
            </div>
            <div id="@exchange.ExchangeName" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">

                            @if (!userKeyList.Any(k => k.ExchangeId == exchange.ExchangeId))
                            {
                                if (exchange.ExchangeId == 2)
                                {
                                    <p>Exchange Coming Soon...</p>
                                }
                                else
                                {
                                    <form asp-action="Connection">
                                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                        <div class="form-group">
                                            <label asp-for="UserKey.PublicKey" class="control-label"></label>
                                            <input asp-for="UserKey.PublicKey" autocomplete="on" class="form-control" />
                                            <span asp-validation-for="UserKey.PublicKey" class="text-danger"></span>

                                        </div>
                                        <div class="form-group">
                                            <label asp-for="UserKey.PrivateKey" class="control-label"></label>
                                            <input asp-for="UserKey.PrivateKey" autocomplete="on" type="password" class="form-control" />
                                            <span asp-validation-for="UserKey.PrivateKey" class="text-danger"></span>
                                        </div>
                                        <div class="form-group">
                                            <input asp-for="UserKey.ExchangeId" value="@exchange.ExchangeId" hidden />
                                        </div>
                                        <div class="form-group">
                                            <input type="submit" value="Create" class="btn btn-primary" />
                                        </div>
                                    </form>
                                }
                            }
                            else
                            {
                                <form asp-action="ConnectionDel">
                                    <div class="form-group">
                                        <strong><label asp-for="UserKey.PublicKey" class="control-label"></label></strong>
                                        <p>@Model.User.UserKeys.FirstOrDefault(u => u.ExchangeId == exchange.ExchangeId).PublicKey</p>
                                        <strong><label asp-for="UserKey.PrivateKey" class="control-label"></label></strong>
                                        <p>********</p>
                                        <input asp-for="UserKey.ExchangeId" value="@exchange.ExchangeId" hidden />
                                    </div>
                                    <div class="form-group">
                                        <input type="submit" value="Delete API Key" class="btn btn-danger" />
                                    </div>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
